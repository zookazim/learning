{# -----------------------------  
   Jinja Template File
   -----------------------------
   Name   : Cohort selection SQL
   Author : DaveB
   Date   : April 2023
   -----------------------------
   Use this template to create the 
   complete cohort selection sql.
   It contains multiple child template
   to minimise code duplication
   and maintenance
   -----------------------------
#}
{# 
   -- Macros ------------------------------------ 

   Macro to add quotation marks to text if necessary 
#}
{%- macro add_quotes(var, var_type) -%}
  {%- if var_type == 'string' -%}
    '{{ var }}'
  {%- else -%}
    {{ var }}
  {%- endif -%}
{%- endmacro -%}
{# 
   Macro to split list into items for the 'IN' statement 
#}
{%- macro create_or_list(lst_values, str_field_name, lst_data_types) -%}
  {%- for value in lst_values -%}
    {%- if loop.first -%} {{str_field_name}} IN ( {{ add_quotes(value, lst_data_types) }}
    {%- else -%}
      ,{{ add_quotes(value, lst_data_types) }} 
    {%- endif -%}
    {% if loop.last %} ) {% endif %}
  {%- endfor -%}
{%- endmacro -%}
{# 
   Macro to split list into 'like' statements 
#}
{%- macro create_like_list(lst_values, str_field_name, lst_data_types) -%}
  {% for value in lst_values %}
    {%- if loop.first %}   {{str_field_name}} like '{{ value }}%'
    {% else %}        OR {{str_field_name}} like '{{ value }}%'
    {% endif  %}
  {% endfor -%} 
{%- endmacro -%}
{# 
   Macro to check if variable is a list 
#}
{% macro is_var_list(var) -%}
  {% if var is iterable and (var is not string and var is not mapping) %}
   TRUE
  {% endif%}
{%- endmacro -%}
{#
-- End Macros ------------------------------------ 

-- MAIN ------------------------------------------ 

-- SELECT statement 
#}
{%- block select -%}

SELECT {% for value in columns %} 
       {{ value }}
       {%- if not loop.last -%}, {% endif -%}       
       {% endfor %}
       
{% endblock select %}
{#

-- FROM Statement

#}
{% block from %}

  FROM {{ table_name }}

{% endblock from %}
{#

-- WHERE Statement

#}
{%- block where_clause %}
 WHERE
    {%- for clause in where_clauses %}
    {# Add 'and' for new lines except the first one #}
    {% if not loop.first %}   AND {% else %} {% endif -%}
        {# 'or' listing #}
        {%- if (clause['is_list'] == 'TRUE') and (clause['condition_type'] == '=')  -%} 
          {# use create_or_list macro to build up statement #}
          {{ create_or_list(clause['criteria'], clause['field_name'], clause['field_data_type']) }} 
        {# 'like' listing #}
        {%- elif (clause['is_list'] == 'TRUE') and (clause['condition_type'] == 'like') -%}
          {# use create_like_list macro to build up statement #}
({{ create_like_list(clause['criteria'], clause['field_name'], clause['field_data_type']) }}       )
        {# Simple condition (use add_quotes macro to include quotes if required) #}
        {%- else -%}
          {# use add_quotes macro to include quotes if required #}
{{ clause['field_name'] }} {{ clause['condition_type'] }} {{ add_quotes(clause['criteria'], clause['field_data_type']) }}
        {% endif %}
    {%- endfor -%}

{%- endblock where_clause -%}
{# -- End MAIN ---------------------------------------- #}